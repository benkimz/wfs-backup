@page "/counter"
@rendermode InteractiveServer
@layout PlainLayout

@inject IJSRuntime JSRuntime
@inject IPrimeRootRepository PrimeRootRepository
@inject IRecursiveRootReader RecursiveRootReader

@code {
    private PrimeRoot? Root { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        @* Root = new HomePrimeRoot().Build(); *@
        @* Root = await PrimeRootRepository.Add(rt);
if (Root != null)
{
string? AsJson<T>(T obj)
{
return System.Text.Json.JsonSerializer.Serialize(obj);
}
var t = AsJson(Root);
Console.WriteLine($"\n\n Root: {Root.Guid.ToString()} {t} \n\n");
WireframeParser.CapturePrimeRootId("home", Root.Guid.ToString());
var d = await RecursiveRootReader.BuildAsync(WireframeParser.GetPrimeRootId("home"));
Console.WriteLine($"\n\n RecursiveRootReader: {d} \n\n");
}
else
{
Console.WriteLine("\n\n >> Root is null \n\n");
} *@
        @* PrimeRootRepository.Add(Root).GetAwaiter().GetResult(); *@
    }
}

@if (Root is not null)
{
    <HeadContent>
    @foreach (string css in Root.ExternalStyleSheets)
        {
            <link href="@css" rel="stylesheet" />
        }
    </HeadContent>
    @if (Root.PageTitle is not null)
    {
        <PageTitle>@Root.PageTitle</PageTitle>
    }

    @WireframeParser.RenderWireFrame(Root)


    @foreach (var script in Root.BodyScripts)
    {
        <script src="@script" type="text/javascript"></script>
    }
}